/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_add.sk0:13*/

void addFirst (LinkedList l_7, int v_8)/*dll_add.sk0:13*/
{
  Entry@ANONYMOUS e_s9_a = null;
  newEntry(e_s9_a);
  e_s9_a.element = v_8;
  e_s9_a.next = l_7.head.next;
  e_s9_a.previous = l_7.head;
  e_s9_a.previous.next = e_s9_a;
  l_7.size = (l_7.size) + 1;
  Entry@ANONYMOUS _tmprhs_s1 = l_7.head.next;
  e_s9_a.next.previous = _tmprhs_s1;
}
/*dll_add.sk0:32*/

void addFrontHarness ()/*dll_add.sk0:32*/
{
  LinkedList@ANONYMOUS l_s1_1 = null;
  newList(l_s1_1);
  assert ((l_s1_1.size) == 0); //Assert at dll_add.sk0:38 (-5685507797140548359)
  assert ((l_s1_1.head.next) == (l_s1_1.head)); //Assert at dll_add.sk0:39 (-7615396337541655163)
  assert ((l_s1_1.head.previous) == (l_s1_1.head)); //Assert at dll_add.sk0:40 (4605519567644217300)
  LinkedList@ANONYMOUS l_s3_2 = null;
  newList(l_s3_2);
  addFirst(l_s3_2, 8);
  assert ((l_s3_2.head.next.element) == 8); //Assert at dll_add.sk0:45 (1091382011891695154)
  assert ((l_s3_2.head.next.previous) == (l_s3_2.head)); //Assert at dll_add.sk0:46 (1299986656012552540)
  assert ((l_s3_2.head.next.next) == (l_s3_2.head)); //Assert at dll_add.sk0:47 (-2012134791019108689)
  assert ((l_s3_2.size) == 1); //Assert at dll_add.sk0:48 (-2685039682852340857)
  LinkedList@ANONYMOUS l_s5_3 = null;
  newList(l_s5_3);
  addFirst(l_s5_3, 8);
  addFirst(l_s5_3, 5);
  assert ((l_s5_3.head.next.element) == 5); //Assert at dll_add.sk0:54 (-7021854659668999356)
  assert ((l_s5_3.head.next.previous) == (l_s5_3.head)); //Assert at dll_add.sk0:55 (3065359030419889074)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk0:56 (-1124023496646757139)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk0:57 (-988965724905423724)
  assert ((l_s5_3.head.next.next.previous.element) == 5); //Assert at dll_add.sk0:58 (-4576627908141853153)
  assert ((l_s5_3.head.next.next.next) == (l_s5_3.head)); //Assert at dll_add.sk0:59 (-7363077586689914967)
  assert ((l_s5_3.size) == 2); //Assert at dll_add.sk0:60 (-3068700783966965032)
  LinkedList@ANONYMOUS l_s7_4 = null;
  newList(l_s7_4);
  addFirst(l_s7_4, 8);
  addFirst(l_s7_4, 5);
  addFirst(l_s7_4, 13);
  assert ((l_s7_4.head.next.element) == 13); //Assert at dll_add.sk0:67 (-9027120066780499335)
  assert ((l_s7_4.head.next.previous) == (l_s7_4.head)); //Assert at dll_add.sk0:68 (-667453927893717429)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk0:69 (-3141163880947040271)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk0:70 (-1814028098540726313)
  assert ((l_s7_4.head.next.next.previous.element) == 13); //Assert at dll_add.sk0:71 (-6437678027590006695)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk0:72 (-6140589727590846366)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk0:73 (-3472551239272411268)
  assert ((l_s7_4.head.next.next.next.previous.element) == 5); //Assert at dll_add.sk0:74 (1590540520292749949)
  assert ((l_s7_4.head.next.next.next.next) == (l_s7_4.head)); //Assert at dll_add.sk0:75 (-8697796400888078110)
  assert ((l_s7_4.size) == 3); //Assert at dll_add.sk0:76 (-2267955624318676322)
}
/*dll_add.sk0:80*/

void addFrontHarness__Wrapper ()  implements addFrontHarness__WrapperNospec/*dll_add.sk0:80*/
{
  addFrontHarness();
}
/*dll_add.sk0:86*/

void addFrontHarness__WrapperNospec ()/*dll_add.sk0:86*/
{ }
/*dll_add.sk0:91*/

void newEntry (ref Entry _out_b)/*dll_add.sk0:91*/
{
  _out_b = null;
  _out_b = new Entry();
  _out_b.previous = null;
  _out_b.next = null;
  return;
}
/*dll_add.sk0:101*/

void newList (ref LinkedList _out_5)/*dll_add.sk0:101*/
{
  _out_5 = null;
  _out_5 = new LinkedList();
  Entry@ANONYMOUS _out_s11_6 = null;
  newEntry(_out_s11_6);
  _out_5.head = _out_s11_6;
  _out_5.head.next = _out_5.head;
  _out_5.head.previous = _out_5.head;
  _out_5.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
