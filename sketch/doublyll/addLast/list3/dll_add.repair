/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_add.sk0:13*/

void addFrontHarness ()/*dll_add.sk0:13*/
{
  LinkedList@ANONYMOUS l_s1_1 = null;
  newList(l_s1_1);
  assert ((l_s1_1.size) == 0); //Assert at dll_add.sk0:19 (-5257356883675141145)
  assert ((l_s1_1.head.next) == (l_s1_1.head)); //Assert at dll_add.sk0:20 (-3120451267483961785)
  assert ((l_s1_1.head.previous) == (l_s1_1.head)); //Assert at dll_add.sk0:21 (2072852589357218279)
  LinkedList@ANONYMOUS l_s3_2 = null;
  newList(l_s3_2);
  addLast(l_s3_2, 8);
  assert ((l_s3_2.head.next.element) == 8); //Assert at dll_add.sk0:26 (3039264382625051932)
  assert ((l_s3_2.head.next.previous) == (l_s3_2.head)); //Assert at dll_add.sk0:27 (5684694893005068661)
  assert ((l_s3_2.head.next.next) == (l_s3_2.head)); //Assert at dll_add.sk0:28 (742622434342251815)
  assert ((l_s3_2.size) == 1); //Assert at dll_add.sk0:29 (6136153937760119664)
  LinkedList@ANONYMOUS l_s5_3 = null;
  newList(l_s5_3);
  addLast(l_s5_3, 8);
  addLast(l_s5_3, 5);
  assert ((l_s5_3.head.next.element) == 8); //Assert at dll_add.sk0:35 (5642451332757561375)
  assert ((l_s5_3.head.next.previous) == (l_s5_3.head)); //Assert at dll_add.sk0:36 (-7862107599613605067)
  assert ((l_s5_3.head.next.next.element) == 5); //Assert at dll_add.sk0:37 (5461016260687930668)
  assert ((l_s5_3.head.next.next.element) == 5); //Assert at dll_add.sk0:38 (-1097015910689807866)
  assert ((l_s5_3.head.next.next.previous.element) == 8); //Assert at dll_add.sk0:39 (-4266349756301211555)
  assert ((l_s5_3.head.next.next.next) == (l_s5_3.head)); //Assert at dll_add.sk0:40 (-5763562678045547659)
  assert ((l_s5_3.size) == 2); //Assert at dll_add.sk0:41 (938297591619822373)
  LinkedList@ANONYMOUS l_s7_4 = null;
  newList(l_s7_4);
  addLast(l_s7_4, 8);
  addLast(l_s7_4, 5);
  addLast(l_s7_4, 13);
  assert ((l_s7_4.head.next.element) == 8); //Assert at dll_add.sk0:48 (-4280396605818761927)
  assert ((l_s7_4.head.next.previous) == (l_s7_4.head)); //Assert at dll_add.sk0:49 (1992368008897626768)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk0:50 (-7516579650228629998)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk0:51 (8883024112219032293)
  assert ((l_s7_4.head.next.next.previous.element) == 8); //Assert at dll_add.sk0:52 (-1947831396327073560)
  assert ((l_s7_4.head.next.next.next.element) == 13); //Assert at dll_add.sk0:53 (3703852931338262251)
  assert ((l_s7_4.head.next.next.next.element) == 13); //Assert at dll_add.sk0:54 (5061187854877623372)
  assert ((l_s7_4.head.next.next.next.previous.element) == 5); //Assert at dll_add.sk0:55 (-6495316505406019560)
  assert ((l_s7_4.head.next.next.next.next) == (l_s7_4.head)); //Assert at dll_add.sk0:56 (8976845544489089477)
  assert ((l_s7_4.size) == 3); //Assert at dll_add.sk0:57 (-959124737681028238)
}
/*dll_add.sk0:61*/

void addFrontHarness__Wrapper ()  implements addFrontHarness__WrapperNospec/*dll_add.sk0:61*/
{
  addFrontHarness();
}
/*dll_add.sk0:67*/

void addFrontHarness__WrapperNospec ()/*dll_add.sk0:67*/
{ }
/*dll_add.sk0:72*/

void addLast (LinkedList l_7, int v_8)/*dll_add.sk0:72*/
{
  Entry@ANONYMOUS e_s9_a = null;
  newEntry(e_s9_a);
  e_s9_a.element = v_8;
  e_s9_a.next = l_7.head;
  e_s9_a.previous = l_7.head.previous;
  e_s9_a.next.previous = e_s9_a;
  l_7.size = (l_7.size) + 1;
  e_s9_a.previous.next = e_s9_a;
}
/*dll_add.sk0:91*/

void newEntry (ref Entry _out_b)/*dll_add.sk0:91*/
{
  _out_b = null;
  _out_b = new Entry();
  _out_b.previous = null;
  _out_b.next = null;
  return;
}
/*dll_add.sk0:101*/

void newList (ref LinkedList _out_5)/*dll_add.sk0:101*/
{
  _out_5 = null;
  _out_5 = new LinkedList();
  Entry@ANONYMOUS _out_s11_6 = null;
  newEntry(_out_s11_6);
  _out_5.head = _out_s11_6;
  _out_5.head.next = _out_5.head;
  _out_5.head.previous = _out_5.head;
  _out_5.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
