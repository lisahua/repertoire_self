/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_remove.sk16:13*/

void addFirst (LinkedList l_1b, int v_1c)/*dll_remove.sk16:13*/
{
  Entry@ANONYMOUS e_s40_1e = null;
  newEntry(e_s40_1e);
  e_s40_1e.element = v_1c;
  e_s40_1e.next = l_1b.head.next;
  e_s40_1e.previous = l_1b.head;
  e_s40_1e.previous.next = e_s40_1e;
  e_s40_1e.next.previous = e_s40_1e;
  l_1b.size = (l_1b.size) + 1;
}
/*dll_remove.sk16:28*/

void newEntry (ref Entry _out_1f)/*dll_remove.sk16:28*/
{
  _out_1f = null;
  _out_1f = new Entry();
  _out_1f.previous = null;
  _out_1f.next = null;
  return;
}
/*dll_remove.sk16:38*/

void newList (ref LinkedList _out_14)/*dll_remove.sk16:38*/
{
  _out_14 = null;
  _out_14 = new LinkedList();
  Entry@ANONYMOUS _out_s42_15 = null;
  newEntry(_out_s42_15);
  _out_14.head = _out_s42_15;
  _out_14.head.next = _out_14.head;
  _out_14.head.previous = _out_14.head;
  _out_14.size = 0;
  return;
}
/*dll_remove.sk16:52*/

void remove (LinkedList l_16, int v_17, ref int _out_18)/*dll_remove.sk16:52*/
{
  _out_18 = 0;
  Entry@ANONYMOUS e_19 = l_16.head.next;
  bit __sa0_1a = e_19 != (l_16.head);
  while(__sa0_1a)
  {
    if((e_19.element) != v_17)/*dll_remove.sk16:66*/
    {
      e_19 = e_19.next;
    }
    else
    {
      e_19.previous.next = e_19.next;
      l_16.size = (l_16.size) - 1;
      _out_18 = 0;
      Entry@ANONYMOUS _tmprhs_s1 = e_19.previous;
      e_19.next.previous = _tmprhs_s1;
      return;
    }
    __sa0_1a = e_19 != (l_16.head);
  }
  _out_18 = 1;
  return;
}
/*dll_remove.sk16:98*/

void removeHarness ()/*dll_remove.sk16:98*/
{
  LinkedList@ANONYMOUS l_s2_1 = null;
  newList(l_s2_1);
  assert ((l_s2_1.size) == 0); //Assert at dll_remove.sk16:104 (6635962093218872959)
  assert ((l_s2_1.head.next) == (l_s2_1.head)); //Assert at dll_remove.sk16:105 (4326588305703605592)
  assert ((l_s2_1.head.previous) == (l_s2_1.head)); //Assert at dll_remove.sk16:106 (-7394509383225405889)
  LinkedList@ANONYMOUS l_s4_2 = null;
  newList(l_s4_2);
  int _out_s6_3 = 0;
  remove(l_s4_2, 8, _out_s6_3);
  assert (_out_s6_3 == 1); //Assert at dll_remove.sk16:112 (3602790727863201631)
  assert ((l_s4_2.head.next) == (l_s4_2.head)); //Assert at dll_remove.sk16:113 (-7938044073293689101)
  assert ((l_s4_2.head.previous) == (l_s4_2.head)); //Assert at dll_remove.sk16:114 (-3742759622706303077)
  assert ((l_s4_2.size) == 0); //Assert at dll_remove.sk16:115 (-2180784139486541421)
  LinkedList@ANONYMOUS l_s8_4 = null;
  newList(l_s8_4);
  addFirst(l_s8_4, 8);
  int _out_s10_5 = 0;
  remove(l_s8_4, 8, _out_s10_5);
  assert (_out_s10_5 == 0); //Assert at dll_remove.sk16:122 (8878781560459890688)
  assert ((l_s8_4.head.next) == (l_s8_4.head)); //Assert at dll_remove.sk16:123 (-3973091845331737443)
  assert ((l_s8_4.head.previous) == (l_s8_4.head)); //Assert at dll_remove.sk16:124 (-857862271112098229)
  assert ((l_s8_4.size) == 0); //Assert at dll_remove.sk16:125 (-6033133137239972911)
  LinkedList@ANONYMOUS l_s12_6 = null;
  newList(l_s12_6);
  addFirst(l_s12_6, 8);
  addFirst(l_s12_6, 5);
  int _out_s14_7 = 0;
  remove(l_s12_6, 5, _out_s14_7);
  assert (_out_s14_7 == 0); //Assert at dll_remove.sk16:133 (3063754203933834223)
  assert ((l_s12_6.head.next.element) == 8); //Assert at dll_remove.sk16:134 (-7244909907577287611)
  assert ((l_s12_6.head.next.next) == (l_s12_6.head)); //Assert at dll_remove.sk16:135 (6639351751760010338)
  assert ((l_s12_6.head.next.previous) == (l_s12_6.head)); //Assert at dll_remove.sk16:136 (5224928748321686026)
  assert ((l_s12_6.size) == 1); //Assert at dll_remove.sk16:137 (5736762533307970014)
  LinkedList@ANONYMOUS l_s16_8 = null;
  newList(l_s16_8);
  addFirst(l_s16_8, 5);
  addFirst(l_s16_8, 8);
  int _out_s18_9 = 0;
  remove(l_s16_8, 5, _out_s18_9);
  assert (_out_s18_9 == 0); //Assert at dll_remove.sk16:145 (8497971568376654448)
  assert ((l_s16_8.head.next.element) == 8); //Assert at dll_remove.sk16:146 (1876688952020122711)
  assert ((l_s16_8.head.next.next) == (l_s16_8.head)); //Assert at dll_remove.sk16:147 (6488579606236610066)
  assert ((l_s16_8.head.next.previous) == (l_s16_8.head)); //Assert at dll_remove.sk16:148 (-8232082758739004008)
  assert ((l_s16_8.size) == 1); //Assert at dll_remove.sk16:149 (5644560890845067491)
  LinkedList@ANONYMOUS l_s20_a = null;
  newList(l_s20_a);
  addFirst(l_s20_a, 5);
  addFirst(l_s20_a, 8);
  int _out_s22_b = 0;
  remove(l_s20_a, 13, _out_s22_b);
  assert (_out_s22_b == 1); //Assert at dll_remove.sk16:157 (405355858507177694)
  assert ((l_s20_a.head.next.element) == 8); //Assert at dll_remove.sk16:158 (5577815783056238259)
  assert ((l_s20_a.head.next.next.element) == 5); //Assert at dll_remove.sk16:159 (6222569098640345123)
  assert ((l_s20_a.head.next.previous) == (l_s20_a.head)); //Assert at dll_remove.sk16:160 (686908345204224309)
  assert ((l_s20_a.head.next.next.element) == 5); //Assert at dll_remove.sk16:161 (-222941926132552856)
  assert ((l_s20_a.head.next.next.next) == (l_s20_a.head)); //Assert at dll_remove.sk16:162 (80764885237063263)
  assert ((l_s20_a.head.next.next.previous.element) == 8); //Assert at dll_remove.sk16:163 (-2363770536986496448)
  assert ((l_s20_a.size) == 2); //Assert at dll_remove.sk16:164 (-1024294892223713061)
  LinkedList@ANONYMOUS l_s24_c = null;
  newList(l_s24_c);
  addFirst(l_s24_c, 5);
  addFirst(l_s24_c, 8);
  addFirst(l_s24_c, 13);
  int _out_s26_d = 0;
  remove(l_s24_c, 8, _out_s26_d);
  assert (_out_s26_d == 0); //Assert at dll_remove.sk16:173 (5815828024755553459)
  assert ((l_s24_c.head.next.element) == 13); //Assert at dll_remove.sk16:174 (-9025080157223267265)
  assert ((l_s24_c.head.next.previous) == (l_s24_c.head)); //Assert at dll_remove.sk16:175 (4555616198226588034)
  assert ((l_s24_c.head.next.next.element) == 5); //Assert at dll_remove.sk16:176 (8056051845464978853)
  assert ((l_s24_c.head.next.next.element) == 5); //Assert at dll_remove.sk16:177 (-7229987154460282179)
  assert ((l_s24_c.head.next.next.previous.element) == 13); //Assert at dll_remove.sk16:178 (4552236722477563553)
  assert ((l_s24_c.head.next.next.next) == (l_s24_c.head)); //Assert at dll_remove.sk16:179 (-6616512063334401071)
  assert ((l_s24_c.size) == 2); //Assert at dll_remove.sk16:180 (-4894703273559528194)
  LinkedList@ANONYMOUS l_s28_e = null;
  newList(l_s28_e);
  addFirst(l_s28_e, 5);
  addFirst(l_s28_e, 8);
  addFirst(l_s28_e, 13);
  int _out_s30_f = 0;
  remove(l_s28_e, 5, _out_s30_f);
  assert (_out_s30_f == 0); //Assert at dll_remove.sk16:189 (-6593301513594133105)
  assert ((l_s28_e.head.next.element) == 13); //Assert at dll_remove.sk16:190 (-6181718064766764693)
  assert ((l_s28_e.head.next.previous) == (l_s28_e.head)); //Assert at dll_remove.sk16:191 (-6828833046963474651)
  assert ((l_s28_e.head.next.next.element) == 8); //Assert at dll_remove.sk16:192 (-8808569674871031922)
  assert ((l_s28_e.head.next.next.element) == 8); //Assert at dll_remove.sk16:193 (-5034886413194329360)
  assert ((l_s28_e.head.next.next.previous.element) == 13); //Assert at dll_remove.sk16:194 (-1352126223346044179)
  assert ((l_s28_e.head.next.next.next) == (l_s28_e.head)); //Assert at dll_remove.sk16:195 (7514822348959359092)
  assert ((l_s28_e.size) == 2); //Assert at dll_remove.sk16:196 (331168587541217463)
  LinkedList@ANONYMOUS l_s32_10 = null;
  newList(l_s32_10);
  addFirst(l_s32_10, 5);
  addFirst(l_s32_10, 8);
  addFirst(l_s32_10, 13);
  int _out_s34_11 = 0;
  remove(l_s32_10, 13, _out_s34_11);
  assert (_out_s34_11 == 0); //Assert at dll_remove.sk16:205 (-5347228307315822951)
  assert ((l_s32_10.head.next.element) == 8); //Assert at dll_remove.sk16:206 (-72191603566901334)
  assert ((l_s32_10.head.next.previous) == (l_s32_10.head)); //Assert at dll_remove.sk16:207 (5118539752159407268)
  assert ((l_s32_10.head.next.next.element) == 5); //Assert at dll_remove.sk16:208 (-5865396909894495466)
  assert ((l_s32_10.head.next.next.element) == 5); //Assert at dll_remove.sk16:209 (-632250224904497655)
  assert ((l_s32_10.head.next.next.previous.element) == 8); //Assert at dll_remove.sk16:210 (6155710917128724340)
  assert ((l_s32_10.head.next.next.next) == (l_s32_10.head)); //Assert at dll_remove.sk16:211 (-363787311994876499)
  assert ((l_s32_10.size) == 2); //Assert at dll_remove.sk16:212 (-8897932705455699386)
  LinkedList@ANONYMOUS l_s36_12 = null;
  newList(l_s36_12);
  addFirst(l_s36_12, 5);
  addFirst(l_s36_12, 8);
  addFirst(l_s36_12, 13);
  int _out_s38_13 = 0;
  remove(l_s36_12, 4, _out_s38_13);
  assert (_out_s38_13 == 1); //Assert at dll_remove.sk16:221 (4710323879859218411)
  assert ((l_s36_12.head.next.element) == 13); //Assert at dll_remove.sk16:222 (-4033136145640964261)
  assert ((l_s36_12.head.next.previous) == (l_s36_12.head)); //Assert at dll_remove.sk16:223 (3194741147570263375)
  assert ((l_s36_12.head.next.next.element) == 8); //Assert at dll_remove.sk16:224 (9084244974828444861)
  assert ((l_s36_12.head.next.next.element) == 8); //Assert at dll_remove.sk16:225 (2481526672537270171)
  assert ((l_s36_12.head.next.next.previous.element) == 13); //Assert at dll_remove.sk16:226 (-5132054832805575448)
  assert ((l_s36_12.head.next.next.next.element) == 5); //Assert at dll_remove.sk16:227 (6816401164435829785)
  assert ((l_s36_12.head.next.next.next.element) == 5); //Assert at dll_remove.sk16:228 (-8835158393318226993)
  assert ((l_s36_12.head.next.next.next.previous.element) == 8); //Assert at dll_remove.sk16:229 (-7528070900892788369)
  assert ((l_s36_12.head.next.next.next.next) == (l_s36_12.head)); //Assert at dll_remove.sk16:230 (-8067462594935995476)
  assert ((l_s36_12.size) == 3); //Assert at dll_remove.sk16:231 (-7078739685347432037)
}
/*dll_remove.sk16:235*/

void removeHarness__Wrapper ()  implements removeHarness__WrapperNospec/*dll_remove.sk16:235*/
{
  removeHarness();
}
/*dll_remove.sk16:241*/

void removeHarness__WrapperNospec ()/*dll_remove.sk16:241*/
{ }
/* END PACKAGE ANONYMOUS*/
