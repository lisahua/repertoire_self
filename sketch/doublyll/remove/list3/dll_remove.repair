/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_remove.sk16:13*/

void addFirst (LinkedList l_1b, int v_1c)/*dll_remove.sk16:13*/
{
  Entry@ANONYMOUS e_s40_1e = null;
  newEntry(e_s40_1e);
  e_s40_1e.element = v_1c;
  e_s40_1e.next = l_1b.head.next;
  e_s40_1e.previous = l_1b.head;
  e_s40_1e.previous.next = e_s40_1e;
  e_s40_1e.next.previous = e_s40_1e;
  l_1b.size = (l_1b.size) + 1;
}
/*dll_remove.sk16:28*/

void newEntry (ref Entry _out_1f)/*dll_remove.sk16:28*/
{
  _out_1f = null;
  _out_1f = new Entry();
  _out_1f.previous = null;
  _out_1f.next = null;
  return;
}
/*dll_remove.sk16:38*/

void newList (ref LinkedList _out_14)/*dll_remove.sk16:38*/
{
  _out_14 = null;
  _out_14 = new LinkedList();
  Entry@ANONYMOUS _out_s42_15 = null;
  newEntry(_out_s42_15);
  _out_14.head = _out_s42_15;
  _out_14.head.next = _out_14.head;
  _out_14.head.previous = _out_14.head;
  _out_14.size = 0;
  return;
}
/*dll_remove.sk16:52*/

void remove (LinkedList l_16, int v_17, ref int _out_18)/*dll_remove.sk16:52*/
{
  _out_18 = 0;
  Entry@ANONYMOUS e_19 = l_16.head.next;
  bit __sa0_1a = e_19 != (l_16.head);
  while(__sa0_1a)
  {
    if((e_19.element) != v_17)/*dll_remove.sk16:66*/
    {
      e_19 = e_19.next;
    }
    else
    {
      e_19.next.previous = e_19.previous;
      l_16.size = (l_16.size) - 1;
      _out_18 = 0;
      Entry@ANONYMOUS _tmprhs_s1 = e_19.next;
      e_19.previous.next = _tmprhs_s1;
      return;
    }
    __sa0_1a = e_19 != (l_16.head);
  }
  _out_18 = 1;
  return;
}
/*dll_remove.sk16:98*/

void removeHarness ()/*dll_remove.sk16:98*/
{
  LinkedList@ANONYMOUS l_s2_1 = null;
  newList(l_s2_1);
  assert ((l_s2_1.size) == 0); //Assert at dll_remove.sk16:104 (-2596807947935662233)
  assert ((l_s2_1.head.next) == (l_s2_1.head)); //Assert at dll_remove.sk16:105 (-185535145099591801)
  assert ((l_s2_1.head.previous) == (l_s2_1.head)); //Assert at dll_remove.sk16:106 (8893032493938896818)
  LinkedList@ANONYMOUS l_s4_2 = null;
  newList(l_s4_2);
  int _out_s6_3 = 0;
  remove(l_s4_2, 8, _out_s6_3);
  assert (_out_s6_3 == 1); //Assert at dll_remove.sk16:112 (8618647618366062685)
  assert ((l_s4_2.head.next) == (l_s4_2.head)); //Assert at dll_remove.sk16:113 (6379293737634090999)
  assert ((l_s4_2.head.previous) == (l_s4_2.head)); //Assert at dll_remove.sk16:114 (-141137574599666140)
  assert ((l_s4_2.size) == 0); //Assert at dll_remove.sk16:115 (-4216737637043796260)
  LinkedList@ANONYMOUS l_s8_4 = null;
  newList(l_s8_4);
  addFirst(l_s8_4, 8);
  int _out_s10_5 = 0;
  remove(l_s8_4, 8, _out_s10_5);
  assert (_out_s10_5 == 0); //Assert at dll_remove.sk16:122 (9171221305175818002)
  assert ((l_s8_4.head.next) == (l_s8_4.head)); //Assert at dll_remove.sk16:123 (-8910037457541086278)
  assert ((l_s8_4.head.previous) == (l_s8_4.head)); //Assert at dll_remove.sk16:124 (-8657757809789288438)
  assert ((l_s8_4.size) == 0); //Assert at dll_remove.sk16:125 (7151404293230577435)
  LinkedList@ANONYMOUS l_s12_6 = null;
  newList(l_s12_6);
  addFirst(l_s12_6, 8);
  addFirst(l_s12_6, 5);
  int _out_s14_7 = 0;
  remove(l_s12_6, 5, _out_s14_7);
  assert (_out_s14_7 == 0); //Assert at dll_remove.sk16:133 (8795680756503158373)
  assert ((l_s12_6.head.next.element) == 8); //Assert at dll_remove.sk16:134 (-491822255700438754)
  assert ((l_s12_6.head.next.next) == (l_s12_6.head)); //Assert at dll_remove.sk16:135 (8342446440013111575)
  assert ((l_s12_6.head.next.previous) == (l_s12_6.head)); //Assert at dll_remove.sk16:136 (-403962305333746259)
  assert ((l_s12_6.size) == 1); //Assert at dll_remove.sk16:137 (6957783362698315891)
  LinkedList@ANONYMOUS l_s16_8 = null;
  newList(l_s16_8);
  addFirst(l_s16_8, 5);
  addFirst(l_s16_8, 8);
  int _out_s18_9 = 0;
  remove(l_s16_8, 5, _out_s18_9);
  assert (_out_s18_9 == 0); //Assert at dll_remove.sk16:145 (5399821988925916425)
  assert ((l_s16_8.head.next.element) == 8); //Assert at dll_remove.sk16:146 (-6825522116429462088)
  assert ((l_s16_8.head.next.next) == (l_s16_8.head)); //Assert at dll_remove.sk16:147 (-4436431191263743829)
  assert ((l_s16_8.head.next.previous) == (l_s16_8.head)); //Assert at dll_remove.sk16:148 (3937986241856384174)
  assert ((l_s16_8.size) == 1); //Assert at dll_remove.sk16:149 (3702377173281209301)
  LinkedList@ANONYMOUS l_s20_a = null;
  newList(l_s20_a);
  addFirst(l_s20_a, 5);
  addFirst(l_s20_a, 8);
  int _out_s22_b = 0;
  remove(l_s20_a, 13, _out_s22_b);
  assert (_out_s22_b == 1); //Assert at dll_remove.sk16:157 (-7686239336042037310)
  assert ((l_s20_a.head.next.element) == 8); //Assert at dll_remove.sk16:158 (2202524773033004365)
  assert ((l_s20_a.head.next.next.element) == 5); //Assert at dll_remove.sk16:159 (-4412878673181866566)
  assert ((l_s20_a.head.next.previous) == (l_s20_a.head)); //Assert at dll_remove.sk16:160 (-367311878847452131)
  assert ((l_s20_a.head.next.next.element) == 5); //Assert at dll_remove.sk16:161 (-1270319030268719703)
  assert ((l_s20_a.head.next.next.next) == (l_s20_a.head)); //Assert at dll_remove.sk16:162 (-3447748255064657082)
  assert ((l_s20_a.head.next.next.previous.element) == 8); //Assert at dll_remove.sk16:163 (6405042156649406408)
  assert ((l_s20_a.size) == 2); //Assert at dll_remove.sk16:164 (-5635248131837099949)
  LinkedList@ANONYMOUS l_s24_c = null;
  newList(l_s24_c);
  addFirst(l_s24_c, 5);
  addFirst(l_s24_c, 8);
  addFirst(l_s24_c, 13);
  int _out_s26_d = 0;
  remove(l_s24_c, 8, _out_s26_d);
  assert (_out_s26_d == 0); //Assert at dll_remove.sk16:173 (-8339437699191601020)
  assert ((l_s24_c.head.next.element) == 13); //Assert at dll_remove.sk16:174 (1742524566302232962)
  assert ((l_s24_c.head.next.previous) == (l_s24_c.head)); //Assert at dll_remove.sk16:175 (-7965645611063938778)
  assert ((l_s24_c.head.next.next.element) == 5); //Assert at dll_remove.sk16:176 (-432609169208494867)
  assert ((l_s24_c.head.next.next.element) == 5); //Assert at dll_remove.sk16:177 (-8162867676865073134)
  assert ((l_s24_c.head.next.next.previous.element) == 13); //Assert at dll_remove.sk16:178 (5687012972244308668)
  assert ((l_s24_c.head.next.next.next) == (l_s24_c.head)); //Assert at dll_remove.sk16:179 (5771828527179160542)
  assert ((l_s24_c.size) == 2); //Assert at dll_remove.sk16:180 (890090376481826645)
  LinkedList@ANONYMOUS l_s28_e = null;
  newList(l_s28_e);
  addFirst(l_s28_e, 5);
  addFirst(l_s28_e, 8);
  addFirst(l_s28_e, 13);
  int _out_s30_f = 0;
  remove(l_s28_e, 5, _out_s30_f);
  assert (_out_s30_f == 0); //Assert at dll_remove.sk16:189 (-2784490675391093165)
  assert ((l_s28_e.head.next.element) == 13); //Assert at dll_remove.sk16:190 (8152588205501196490)
  assert ((l_s28_e.head.next.previous) == (l_s28_e.head)); //Assert at dll_remove.sk16:191 (-1614324930127841724)
  assert ((l_s28_e.head.next.next.element) == 8); //Assert at dll_remove.sk16:192 (-523677866661269540)
  assert ((l_s28_e.head.next.next.element) == 8); //Assert at dll_remove.sk16:193 (3270295609034242024)
  assert ((l_s28_e.head.next.next.previous.element) == 13); //Assert at dll_remove.sk16:194 (-2512161400123184810)
  assert ((l_s28_e.head.next.next.next) == (l_s28_e.head)); //Assert at dll_remove.sk16:195 (4079117129080269710)
  assert ((l_s28_e.size) == 2); //Assert at dll_remove.sk16:196 (1592418603417845976)
  LinkedList@ANONYMOUS l_s32_10 = null;
  newList(l_s32_10);
  addFirst(l_s32_10, 5);
  addFirst(l_s32_10, 8);
  addFirst(l_s32_10, 13);
  int _out_s34_11 = 0;
  remove(l_s32_10, 13, _out_s34_11);
  assert (_out_s34_11 == 0); //Assert at dll_remove.sk16:205 (-3527549618829256443)
  assert ((l_s32_10.head.next.element) == 8); //Assert at dll_remove.sk16:206 (-4699271131265028602)
  assert ((l_s32_10.head.next.previous) == (l_s32_10.head)); //Assert at dll_remove.sk16:207 (-4470473513804608849)
  assert ((l_s32_10.head.next.next.element) == 5); //Assert at dll_remove.sk16:208 (-2761161704735268859)
  assert ((l_s32_10.head.next.next.element) == 5); //Assert at dll_remove.sk16:209 (618307594237293225)
  assert ((l_s32_10.head.next.next.previous.element) == 8); //Assert at dll_remove.sk16:210 (1702347451534365854)
  assert ((l_s32_10.head.next.next.next) == (l_s32_10.head)); //Assert at dll_remove.sk16:211 (-1413582586690063325)
  assert ((l_s32_10.size) == 2); //Assert at dll_remove.sk16:212 (5681553573468201588)
  LinkedList@ANONYMOUS l_s36_12 = null;
  newList(l_s36_12);
  addFirst(l_s36_12, 5);
  addFirst(l_s36_12, 8);
  addFirst(l_s36_12, 13);
  int _out_s38_13 = 0;
  remove(l_s36_12, 4, _out_s38_13);
  assert (_out_s38_13 == 1); //Assert at dll_remove.sk16:221 (-8467349498109777629)
  assert ((l_s36_12.head.next.element) == 13); //Assert at dll_remove.sk16:222 (3240266672683808690)
  assert ((l_s36_12.head.next.previous) == (l_s36_12.head)); //Assert at dll_remove.sk16:223 (-5755591413142739788)
  assert ((l_s36_12.head.next.next.element) == 8); //Assert at dll_remove.sk16:224 (-9219551333365039727)
  assert ((l_s36_12.head.next.next.element) == 8); //Assert at dll_remove.sk16:225 (-3375315869424638185)
  assert ((l_s36_12.head.next.next.previous.element) == 13); //Assert at dll_remove.sk16:226 (6659399833242040463)
  assert ((l_s36_12.head.next.next.next.element) == 5); //Assert at dll_remove.sk16:227 (1570703829439155924)
  assert ((l_s36_12.head.next.next.next.element) == 5); //Assert at dll_remove.sk16:228 (-7407126546982261483)
  assert ((l_s36_12.head.next.next.next.previous.element) == 8); //Assert at dll_remove.sk16:229 (1833075222546527971)
  assert ((l_s36_12.head.next.next.next.next) == (l_s36_12.head)); //Assert at dll_remove.sk16:230 (-272221123008575400)
  assert ((l_s36_12.size) == 3); //Assert at dll_remove.sk16:231 (1536019311783242890)
}
/*dll_remove.sk16:235*/

void removeHarness__Wrapper ()  implements removeHarness__WrapperNospec/*dll_remove.sk16:235*/
{
  removeHarness();
}
/*dll_remove.sk16:241*/

void removeHarness__WrapperNospec ()/*dll_remove.sk16:241*/
{ }
/* END PACKAGE ANONYMOUS*/
